{"version":3,"file":"static/js/892.e501fb75.chunk.js","mappings":"mOAEaA,E,QAAOC,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8F,mBCMzBC,EAAc,SAAAC,GAAM,OACxBC,EAAAA,GAAAA,MAAY,GAADC,OAAIF,EAAM,oCAAoC,CACvDG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SACN,EA0EL,EA5DiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,KAAK,IACpDC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,OAAQ,IAEVC,SAAU,SAAAC,GACR,GAAKA,EAAOH,MAASG,EAAOF,OAA5B,CAEA,GACER,EAASW,MAAK,SAAAC,GAAE,OAAIA,EAAGL,KAAKM,gBAAkBH,EAAOH,KAAKM,aAAa,IAEvE,OAAO5B,EAAY,QAADG,OAASsB,EAAOH,OAEpC,GAAIP,EAASW,MAAK,SAAAC,GAAE,OAAIA,EAAGJ,SAAWE,EAAOF,MAAM,IACjD,OAAOvB,EAAY,gBAADG,OAAiBsB,EAAOF,SAE5CV,GAASgB,EAAAA,EAAAA,IAAWJ,IA9BxBvB,EAAAA,GAAAA,QAAc,8BAA+B,CAC3CE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAyBLO,EAAOW,WAbmC,CAc5C,IAGF,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAACnC,EAAI,CAAC4B,SAAUL,EAAOe,aAAaD,SAAA,EAClCE,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,GAAG,eACHC,MAAM,OACNC,QAAQ,SACRC,KAAK,OACLlB,KAAK,OACLmB,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOM,OAAOH,KACrBsB,YAAY,UAEdT,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,GAAG,eACHC,MAAM,SACNC,QAAQ,SACRC,KAAK,MACLlB,KAAK,SACLmB,SAAUtB,EAAOuB,aACjBC,MAAOxB,EAAOM,OAAOF,OACrBqB,YAAY,gBAEdT,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACL,KAAK,SAASlB,KAAK,SAASwB,GAAI,CAAEC,SAAU,QAASd,SAAC,oBAIhEE,EAAAA,EAAAA,KAAA,OAAAF,UACEE,EAAAA,EAAAA,KAACa,EAAAA,GAAc,QAIvB,C","sources":["components/BookForm/BookForm.styled.jsx","components/BookForm/BookForm.jsx"],"sourcesContent":["import { styled } from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  width: 300px;\r\n\r\n  padding: 20px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import { useFormik } from 'formik';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { Form } from './BookForm.styled';\r\nimport { addContact } from 'store/operations';\r\n\r\nconst errorNotify = target =>\r\n  toast.error(`${target} already exists in the phonebook`, {\r\n    position: 'top-right',\r\n    autoClose: 1000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: 'light',\r\n  });\r\n\r\nconst successNotify = () =>\r\n  toast.success(`Contact added to phonebook!`, {\r\n    position: 'top-right',\r\n    autoClose: 1000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: 'light',\r\n  });\r\n\r\nconst BookForm = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      number: '',\r\n    },\r\n    onSubmit: values => {\r\n      if (!values.name || !values.number) return;\r\n\r\n      if (\r\n        contacts.find(el => el.name.toLowerCase() === values.name.toLowerCase())\r\n      )\r\n        return errorNotify(`Name ${values.name}`);\r\n\r\n      if (contacts.find(el => el.number === values.number))\r\n        return errorNotify(`Phone number ${values.number}`);\r\n\r\n      dispatch(addContact(values));\r\n      successNotify();\r\n\r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <TextField\r\n          id=\"filled-basic\"\r\n          label=\"Name\"\r\n          variant=\"filled\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.name}\r\n          placeholder=\"Jack\"\r\n        />\r\n        <TextField\r\n          id=\"filled-basic\"\r\n          label=\"Number\"\r\n          variant=\"filled\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.number}\r\n          placeholder=\"0990003355\"\r\n        />\r\n        <Button type=\"submit\" name=\"submit\" sx={{ fontSize: '22px' }}>\r\n          Add contact\r\n        </Button>\r\n      </Form>\r\n      <div>\r\n        <ToastContainer />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookForm;\r\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","errorNotify","target","toast","concat","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","dispatch","useDispatch","contacts","useSelector","state","items","formik","useFormik","initialValues","name","number","onSubmit","values","find","el","toLowerCase","addContact","resetForm","_jsxs","_Fragment","children","handleSubmit","_jsx","TextField","id","label","variant","type","onChange","handleChange","value","placeholder","Button","sx","fontSize","ToastContainer"],"sourceRoot":""}